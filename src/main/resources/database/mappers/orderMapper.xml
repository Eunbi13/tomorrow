<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
    <mapper namespace="com.tmh.t1.orders.OrdersMapper">
    
    	<select id="getPage" parameterType="OrdersVO" resultType="OrdersVO">
    		select * from orders where orderNum=#{orderNum}
    	</select>
    	
    	
    	
    	<select id="getSelectBrandList" parameterType="OrdersVO" resultType="BrandVO">
			select brandNum, brandName,companyName, managerPhone from brand
				where brandNum in 
					(select  C.brandNum from
						(select * from orders 
						where orderNum=#{orderNum})O
						    		inner join 
											(select * from cart 
								    		where orderNum=#{orderNum}
								    		) C 
							    		on C.orderNum = O.orderNum
				                        group by brandNum)
			
	    </select> 
    	
    	
    	
    	<select id="getSelect" parameterType="OrdersVO" resultMap="cartListResult">
    		select O.*, C.*, P.* from
    			(select * from orders 
    			where orderNum=#{orderNum}
    			)O
    			inner join 
						(select * from cart 
			    		where orderNum=#{orderNum} 
			    		) C
			    		on C.orderNum = O.orderNum
			    		left join (select productPic, productName, productNum, shippingFee from product) P 
			            on P.productNum = C.productNum
			           
    	</select>
    	
    	<select id="getCartList" parameterType="OrdersVO" resultType="cartVO">
  
    		select C.*, O.* from 
				(
				select * from cart 
	    		where username=#{username} and 
	    		           <choose>
				    		  	<when test="status == null">
				    		  		(validity > 1 and  8 > validity)
				    		  	</when>
				    		  	<when test="status == 8">
				    		  	   (validity = '11' or validity = '12')
				    		  	</when>
				    		  	<when test="status == 9">
				    		  		(validity = '13' or validity = '14' or validity = '15')
				    		  	</when>
				    		  	<when test="status == 10">
				    		  	    (validity = '8' or validity = '9' or validity = '10')
				    		  	</when>
				    		  	<otherwise>
				    		  		validity=#{status}
				    		  	</otherwise>
			    		  </choose>
		
				   ) C
					inner join 
						(select * from orders 
							where
							
							orderDay BETWEEN DATE_ADD(NOW(),INTERVAL 
							-
								<if test="before == null ">
								3
								</if>
								<if test="before != null ">
								#{before}
								</if>
							
							MONTH ) AND NOW()
						
			    		) O
					on C.orderNum = O.orderNum
			             order by C.cartNum desc
	    	

    	</select>
    	
    	
    	<select id="getOrdersList" parameterType="OrdersVO" resultMap="cartListResult">
    	   select orderNum, orderDay from orders
				
				where 
				
				orderNum in
				
						(select C.orderNum from 
					    		((select * from orders where username=#{username} and 
								
								orderDay BETWEEN DATE_ADD(NOW(),INTERVAL 
								-
								<if test="before == null ">
								3
								</if>
								<if test="before != null ">
								#{before}
								</if>
								
								
								MONTH ) AND NOW()
								
								) O
								inner join 
								(select * from cart 
					    		where username=#{username} and 
					    		
					    		<choose>
					    		  	<when test="status == null">
					    		  		(validity > 1 and   8 > validity)
					    		  	</when>
					    		  	<when test="status == 8">
					    		  	   (validity = '11' or validity = '12')
					    		  	</when>
					    		  	<when test="status == 9">
					    		  		(validity = '13' or validity = '14' or validity = '15')
					    		  	</when>
					    		  	<when test="status == 10">
					    		  	    (validity = '8' or validity = '9' or validity = '10')
					    		  	</when>
					    		  	<otherwise>
					    		  		validity=#{status}
					    		  	</otherwise>
			    		       </choose>
								
					    		) C
								on C.orderNum = O.orderNum)
				            group by C.orderNum)
				             order by orderNum desc
    	
    	</select>
    	
    	 <select id="getBrandList" parameterType="OrdersVO" resultType="BrandVO">
			select  A.brandNum, A.brandName,A.companyName, A.managerPhone, B.orderNum
			from
			(select brandNum, brandName,companyName, managerPhone from brand
			where brandNum in 
				(
				select brandNum from cart
				
				where 
				
				orderNum in
						(select C.orderNum from 
					    		((select * from orders where username=#{username} and 
								
								orderDay BETWEEN DATE_ADD(NOW(),INTERVAL 
								-
								<if test="before == null ">
								3
								</if>
								<if test="before != null ">
								#{before}
								</if>
										
								MONTH ) AND NOW()
								
								) O
								inner join 
								(select * from cart 
					    		where username=#{username} and 
					    		
					    		<choose>
					    		  	<when test="status == null">
					    		  		(validity > 1 and  8 > validity)
					    		  	</when>
					    		  	<when test="status == 8">
					    		  	   (validity = '11' or validity = '12')
					    		  	</when>
					    		  	<when test="status == 9">
					    		  		(validity = '13' or validity = '14' or validity = '15')
					    		  	</when>
					    		  	<when test="status == 10">
					    		  	    (validity = '8' or validity = '9' or validity = '10')
					    		  	</when>
					    		  	<otherwise>
					    		  		validity=#{status}
					    		  	</otherwise>
			    		       </choose>
								
					    		) C
								on C.orderNum = O.orderNum)
				            group by C.orderNum)
				    group by brandNum)
			) A left join  (select  O.orderNum, C.brandNum from 
					    ((select * from orders where username=#{username} and 
								orderDay BETWEEN DATE_ADD(NOW(),INTERVAL 
								-
								<if test="before == null ">
								3
								</if>
								<if test="before != null ">
								#{before}
								</if>
								 MONTH ) AND NOW()
								
								) O
								inner join 
								(select * from cart 
					    		where username=#{username} and 
					    		
								<choose>
					    		  	<when test="status == null">
					    		  		(validity > 1 and  8 > validity)
					    		  	</when>
					    		  	<when test="status == 8">
					    		  	   (validity = '11' or validity = '12')
					    		  	</when>
					    		  	<when test="status == 9">
					    		  		(validity = '13' or validity = '14' or validity = '15')
					    		  	</when>
					    		  	<when test="status == 10">
					    		  	    (validity = '8' or validity = '9' or validity = '10')
					    		  	</when>
					    		  	<otherwise>
					    		  		validity=#{status}
					    		  	</otherwise>
			    		       </choose>
					    		) C
								on C.orderNum = O.orderNum)
                                 ) B
			on A.brandNum =B.brandNum
			group by orderNum, brandNum
	    </select> 
    	
    	
    	<select id="getList" parameterType="OrdersVO" resultMap="cartListResult">
    	   select C.*, O.*, P.*, C.carrierId, C.trackId from 
				(select * from orders 
					where username=#{username} and 
					
					orderDay BETWEEN DATE_ADD(NOW(),INTERVAL 
					-
						<if test="before == null ">
						3
						</if>
						<if test="before != null ">
						#{before}
						</if>
					
					MONTH ) AND NOW()
					
				   ) O
					inner join 
						(select * from cart 
			    		where username=#{username} and 
			    		  <choose>
				    		  	<when test="status == null">
				    		  		(validity > 1 and 8 > validity)
				    		  	</when>
				    		  	<when test="status == 8">
				    		  	   (validity = '11' or validity = '12')
				    		  	</when>
				    		  	<when test="status == 9">
				    		  		(validity = '13' or validity = '14' or validity = '15')
				    		  	</when>
				    		  	<when test="status == 10">
				    		  	    (validity = '8' or validity = '9' or validity = '10')
				    		  	</when>
				    		  	<otherwise>
				    		  		validity=#{status}
				    		  	</otherwise>
			    		  </choose>
						
			    		) C
					on C.orderNum = O.orderNum
						left join (select productPic, productName, productNum, shippingFee from product) P 
			            on P.productNum = C.productNum
			             order by O.orderNum desc
	    	
    	</select>
    	
    	<resultMap type="OrdersVO" id="cartListResult">
	    	<id column="orderNum" property="orderNum" />
	    	<result column="username" property="username" />
	        <result column="paymentType" property="paymentType" />
	        <result column="itemsPrice" property="itemsPrice" />
	    	<result column="shippingFee" property="shippingFee" />
	        <result column="payment" property="payment" />
	    	<result column="shippingMemo" property="shippingMemo" />
	    	<result column="orderDay" property="orderDay" />
	    	<result column="updateDay" property="updateDay" />
	    	<result column="name" property="name" />
	    	<result column="email" property="email" />
	    	<result column="phone" property="phone" />
	    	<result column="shipName" property="shipName" />
	    	<result column="shipPhone" property="shipPhone" />
	    	<result column="postcode" property="postcode" />
	    	<result column="shipAddress" property="shipAddress" />
	    	
	        <collection property="cartList" javaType="java.util.List" ofType="CartVO">
	        	<id column="cartNum" property="cartNum" />
	        	<result column="brandNum" property="brandNum" />
	        	<result column="productNum" property="productNum" />
	        	<result column="orderNum" property="orderNum" />
	        	<result column="amount" property="amount" />
		        <result column="validity" property="validity" />
		        <result column="brandShipping" property="brandShipping" />
		    	<result column="cartPrice" property="cartPrice" />
		    	<result column="unitPrice" property="unitPrice" />
		    	<result column="unitName" property="unitName" />
		    	<result column="carrierId" property="carrierId" />
		    	<result column="trackId" property="trackId" />
		    	<result column="cancel" property="cancel" />
		    	<result column="cancelMemo" property="cancelMemo" />
	        	
	           <association property="productVO"  javaType="ProductVO">
	        	<id column="productNum" property="productNum" />
	        	<result column="productPic" property="productPic" />
	        	<result column="productName" property="productName" />
	        	<result column="shippingFee" property="shippingFee" />
	           </association>
	          
	           
	        </collection>
	        
	    </resultMap>
	    
	    
	   
    	
    	<insert id="setInsert" parameterType="OrdersVO" useGeneratedKeys="true" keyProperty="orderNum">
    		insert into orders(username, itemsPrice, shippingFee, payment) 
    		values (#{username}, #{itemsPrice}, #{shippingFee}, #{payment})
    	</insert>
    	
    	<delete id="setDelete" parameterType="OrdersVO">
    		delete from orders where orderNum=#{orderNum}
    	</delete>
    	
    	
    	
    	
    	<update id="setAjaxUpdate" parameterType="OrdersVO">
    	    update orders set  
    	     shippingMemo=#{shippingMemo}, paymentType=#{paymentType}, shipName=#{shipName},
    	     shipPhone=#{shipPhone},  shipAddress=#{shipAddress},  postcode=#{postcode}									
    	    where orderNum=#{orderNum}
    	</update>
    	
    	<update id="setUpdate" parameterType="OrdersVO">
    	    update orders set  
    	    name=#{name},email=#{email}, phone=#{phone}
    	    where orderNum=#{orderNum}
    	</update>
    	
    	
    
    
    
        
    
    	
    
    </mapper>